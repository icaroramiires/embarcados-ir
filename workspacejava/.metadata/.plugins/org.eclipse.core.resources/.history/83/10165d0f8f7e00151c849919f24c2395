package br.edu.ifba.embarcados.javamonitor.asincexec;

import java.util.List;
import java.io.File;

import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

import br.edu.ifba.bsi.embarcados.javamonitor.alerta.Audio;
import br.edu.ifba.embarcados.javamonitor.Executor;
import br.edu.ifba.embarcados.javamonitor.conector.Conector;
import br.edu.ifba.embarcados.javamonitor.conector.IConexao;

public class AsincExec implements Runnable {
	private String porta;
	private boolean continuar;
	private List<IListenerMonitor> listeners;
	
	public AsincExec(String porta){
		this.porta = porta;
	}
	
	public void addListener(IListenerMonitor listener) {
		listeners.add(listener);
	}
	
	public void setContinuar(boolean continuar) {
		this.continuar = continuar;
	}
	
	
	@Override
	public void run() {
		Logger log = Logger.getLogger(Executor.class);
		// definindo um arquivo sonoro para alertar ocorrencias 
		String path = System.getProperty("user.dir")+"/src/br/edu/ifba/bsi/embarcados/javamonitor/alerta/som.mp3";
		File mp3File = new File(path);
		Audio alerta  = new Audio(mp3File);
		
		// setando as  configurações do arquivo de log
		BasicConfigurator.configure();
		PropertyConfigurator.configure("conf/log4j.properties");
		
		IConexao conector = Conector.getConector();
		
		if (conector.iniciar(porta) == 0) {
			continuar = true;
			while (continuar) {
				conector.ler();
			/*
				//System.out.println("Atividade " + conector.getAtividade());
				// System.out.println("Altitude " + conector.getAltura());
				log.info("Atividade " + conector.getAtividade() + " - " + "Altura " + conector.getAltura());
				
				if(conector.getAtividade() == 1){
					log.warn("Atividade Sismica detectada");
					alerta.play();
				}
				try {
					Thread.sleep(100);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			conector.finalizar();
		}
		else
			log.error("nao foi possivel comunicar via serial");
			
			*/
	}

}
