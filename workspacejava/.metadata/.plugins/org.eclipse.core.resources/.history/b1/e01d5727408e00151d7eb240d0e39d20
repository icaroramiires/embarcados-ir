package br.edu.ifba.embarcados.javamonitor.asincexec;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

import br.edu.ifba.embarcados.javamonitor.conector.Conector;
import br.edu.ifba.embarcados.javamonitor.conector.IConexao;

public class AsincExec implements Runnable {
	private String porta;
	private boolean continuar;
	private List<IListenerMonitor> listeners;
	final Logger log = Logger.getLogger(AsincExec.class);

	public AsincExec(String porta) {
		this.porta = porta;
		this.listeners = new ArrayList<IListenerMonitor>();
	}

	public void addListener(IListenerMonitor listener) {
		listeners.add(listener);
	}

	public void setContinuar(boolean continuar) {
		this.continuar = continuar;
	}
	@Override
	public void run() {
		BasicConfigurator.configure();
		PropertyConfigurator.configure("conf/log4j.properties");
		
		IConexao conector = Conector.getConector();
		
		if (conector.iniciar(porta) == 0) {

			continuar = true;

			while (continuar) {

				conector.ler();
				
				if (conector.getAtividade() == 1) {
					//log.warn("Altura " + conector.getAltura() + " Metros");
					notificar();
				}
				try {
					Thread.sleep(100);
				} catch (InterruptedException e) {

					e.printStackTrace();
				}
			}
			conector.finalizar();
		} else {
			System.out.println("NÃ£o foi possivel comunicar via serial");
		}

	}

	private void notificar(int valor) {
		for (IListenerMonitor listener : listeners) {
			listener.notificarAtividade(valor);
		}
	}
}